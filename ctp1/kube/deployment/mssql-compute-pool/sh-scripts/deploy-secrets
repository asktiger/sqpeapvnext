#!/bin/bash

# Abort if the environemnt variables are not set
#
if [ "$MSSQL_SA_PASSWORD" == "" ]; then
    echo 'Please set env variable MSSQL_SA_PASSWORD prior to running this script'
elif [ "$MSSQL_IMPORT_PASSWORD" == "" ]; then
    echo 'Please set env variable MSSQL_IMPORT_PASSWORD prior to running this script'
elif [ "$MSSQL_EXTERNAL_PASSWORD" == "" ]; then
    echo 'Please set env variable MSSQL_EXTERNAL_PASSWORD prior to running this script'
elif [ "$DOCKER_USERNAME" == "" ]; then
    echo 'Please set env variable DOCKER_USERNAME prior to running this script'
elif [ "$DOCKER_PASSWORD" == "" ]; then
    echo 'Please set env variable DOCKER_PASSWORD prior to running this script'
elif [ "$DOCKER_EMAIL" == "" ]; then
    echo 'Please set env variable DOCKER_EMAIL prior to running this script'
else

# Create docker registry secrets
#
kubectl create secret docker-registry mssql-private-registry --docker-server=private-repo.microsoft.com --docker-username=$DOCKER_USERNAME --docker-password=$DOCKER_PASSWORD --docker-email=$DOCKER_EMAIL

# Create SQL Server secrets
#
    BASE64_ENCODED_MSSQL_SA_PASSWORD=`echo -n "$MSSQL_SA_PASSWORD" | base64` \
    BASE64_ENCODED_MSSQL_IMPORT_PASSWORD=`echo -n "$MSSQL_IMPORT_PASSWORD" | base64` \
    BASE64_ENCODED_MSSQL_EXTERNAL_PASSWORD=`echo -n "$MSSQL_EXTERNAL_PASSWORD" | base64` \
    perl -pe 's/\$(\w+)/$ENV{$1}/g;' < ../config/secrets.yaml.tmpl > ./secrets.yaml

    kubectl create -f ./secrets.yaml
    rm ./secrets.yaml

fi
